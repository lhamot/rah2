name: cmake_std

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        BUILD_TYPE: [Debug, Release]
        compiler: [ 
            {os: windows-latest, cpp: msvc, c: msvc, cppstd: 14 }, 
            {os: macos-latest, cpp: clang++, c: clang, cppstd: 14} ,
            {os: ubuntu-24.04, cpp: clang++-19, c: clang-19, cppstd: 14},
            {os: ubuntu-24.04, cpp: g++, c: gcc, cppstd: 14},
            {os: windows-latest, cpp: msvc, c: msvc, cppstd: 23 }, 
            {os: macos-latest, cpp: clang++, c: clang, cppstd: 23} ,
            {os: ubuntu-24.04, cpp: clang++-19, c: clang-19, cppstd: 20},
            {os: ubuntu-24.04, cpp: g++, c: gcc, cppstd: 23} 
        ]
        
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.compiler.os }}
